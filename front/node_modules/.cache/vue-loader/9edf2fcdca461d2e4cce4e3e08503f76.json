{"remainingRequest":"D:\\其他\\刘老师\\项目\\华胜投标招标\\bidding-agent-be\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\其他\\刘老师\\项目\\华胜投标招标\\bidding-agent-be\\front\\src\\views\\project_details\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\其他\\刘老师\\项目\\华胜投标招标\\bidding-agent-be\\front\\src\\views\\project_details\\index.vue","mtime":1698734403324},{"path":"D:\\其他\\刘老师\\项目\\华胜投标招标\\bidding-agent-be\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":1681715802987},{"path":"D:\\其他\\刘老师\\项目\\华胜投标招标\\bidding-agent-be\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681715802937},{"path":"D:\\其他\\刘老师\\项目\\华胜投标招标\\bidding-agent-be\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":1681715801225}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}